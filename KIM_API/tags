!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.6	//
FREEABLE	KIMservice.cpp	23;"	d	file:
IOline	KIMservice.cpp	/^IOline::IOline(){$/;"	f	class:IOline
KEY_CHAR_LENGTH	KIMservice.cpp	20;"	d	file:
KIMBaseElement	KIMservice.cpp	/^KIMBaseElement:: KIMBaseElement(){$/;"	f	class:KIMBaseElement
KIMBaseElementFlag	KIMservice.cpp	/^KIMBaseElementFlag:: KIMBaseElementFlag(){$/;"	f	class:KIMBaseElementFlag
KIMBaseElementUnit	KIMservice.cpp	/^ KIMBaseElementUnit:: KIMBaseElementUnit(){$/;"	f	class:KIMBaseElementUnit
KIM_API_allocate	KIMserviceC.cpp	/^ void KIM_API_allocate(void *kimmdl, intptr_t natoms, int ntypes){$/;"	f
KIM_API_free	KIMserviceC.cpp	/^void KIM_API_free(void *kimmdl){$/;"	f
KIM_API_get_Units	KIMserviceC.cpp	/^void KIM_API_get_Units(void *kimmdl,char * UnitsSystem){$/;"	f
KIM_API_get_data	KIMserviceC.cpp	/^void * KIM_API_get_data(void *kimmdl,char *nm){$/;"	f
KIM_API_get_data_byI	KIMserviceC.cpp	/^void * KIM_API_get_data_byI(void *kimmdl,int I){$/;"	f
KIM_API_get_index	KIMserviceC.cpp	/^int KIM_API_get_index(void *kimmdl,char *nm){$/;"	f
KIM_API_get_originalUnits	KIMserviceC.cpp	/^void KIM_API_get_originalUnits(void *kimmdl,char * UnitsSystem){$/;"	f
KIM_API_get_rank_shape	KIMserviceC.cpp	/^intptr_t KIM_API_get_rank_shape(void *kimmdl,char *nm, int * shape){$/;"	f
KIM_API_get_rank_shape_byI	KIMserviceC.cpp	/^intptr_t KIM_API_get_rank_shape_byI(void *kimmdl,int I, int * shape){$/;"	f
KIM_API_get_size	KIMserviceC.cpp	/^intptr_t KIM_API_get_size(void *kimmdl,char *nm){$/;"	f
KIM_API_get_size_byI	KIMserviceC.cpp	/^intptr_t KIM_API_get_size_byI(void *kimmdl,int I){$/;"	f
KIM_API_init	KIMserviceC.cpp	/^int KIM_API_init(void * kimmdl, char *testname, char *mdlname){$/;"	f
KIM_API_init1	KIMserviceC.cpp	/^int KIM_API_init1(void * kimmdl, char * testinputf,char * testname, char * mdlinputf,char *mdlname){$/;"	f
KIM_API_isUnitS_fixed	KIMserviceC.cpp	/^int KIM_API_isUnitS_fixed(void *kimmdl){$/;"	f
KIM_API_isit_compute	KIMserviceC.cpp	/^int KIM_API_isit_compute(void *kimmdl,char *nm){$/;"	f
KIM_API_isit_compute_byI	KIMserviceC.cpp	/^int KIM_API_isit_compute_byI(void *kimmdl,int I){$/;"	f
KIM_API_model	KIMservice.cpp	/^KIM_API_model:: KIM_API_model(){$/;"	f	class:KIM_API_model
KIM_API_model_compute	KIMserviceC.cpp	/^void KIM_API_model_compute(void *kimmdl){$/;"	f
KIM_API_print	KIMserviceC.cpp	/^void KIM_API_print(void *kimmdl){$/;"	f
KIM_API_set2_compute	KIMserviceC.cpp	/^void KIM_API_set2_compute(void *kimmdl,char *nm){$/;"	f
KIM_API_set2_compute_byI	KIMserviceC.cpp	/^void KIM_API_set2_compute_byI(void *kimmdl,int I){$/;"	f
KIM_API_set2_uncompute	KIMserviceC.cpp	/^void KIM_API_set2_uncompute(void *kimmdl,char *nm){$/;"	f
KIM_API_set2_uncompute_byI	KIMserviceC.cpp	/^void KIM_API_set2_uncompute_byI(void *kimmdl,int I){$/;"	f
KIM_API_set_Units	KIMserviceC.cpp	/^int KIM_API_set_Units(void *kimmdl,char * UnitsSystem){$/;"	f
KIM_API_set_data	KIMserviceC.cpp	/^int  KIM_API_set_data(void *kimmdl,char *nm, intptr_t size, void *dt){$/;"	f
KIM_API_set_data_byI	KIMserviceC.cpp	/^void  KIM_API_set_data_byI(void *kimmdl,int I, intptr_t size, void *dt){$/;"	f
KIM_API_transform_Units_to	KIMserviceC.cpp	/^void KIM_API_transform_Units_to(void *kimmdl,char * UnitsSystem){$/;"	f
KIM_IOline	KIMservice.cpp	/^KIM_IOline::KIM_IOline(){$/;"	f	class:KIM_IOline
SystemOfUnit	KIMservice.cpp	/^SystemOfUnit::SystemOfUnit(){$/;"	f	class:SystemOfUnit
_KIMSERVICE_H	KIMservice.cpp	18;"	d	file:
allocateinitialized	KIMservice.cpp	/^void KIM_API_model::allocateinitialized(KIM_API_model * mdl, intptr_t natoms, int ntypes){$/;"	f	class:KIM_API_model
among_supported_units	KIMservice.cpp	/^bool KIM_API_model::among_supported_units(char *unitS){$/;"	f	class:KIM_API_model
are_infileunits_consistent	KIMservice.cpp	/^bool KIM_API_model::are_infileunits_consistent(){$/;"	f	class:KIM_API_model
data_multiply_a	KIMservice.cpp	/^void KIM_API_model::data_multiply_a(void *dt,char* type,intptr_t sz,float a){$/;"	f	class:KIM_API_model
free	KIMservice.cpp	/^ void KIM_API_model::free(){$/;"	f	class:KIM_API_model
free	KIMservice.cpp	/^void KIMBaseElement::free(){$/;"	f	class:KIMBaseElement
getFields	KIMservice.cpp	/^bool IOline:: getFields(const char *inputString){$/;"	f	class:IOline
getFields	KIMservice.cpp	/^bool KIM_IOline:: getFields(char *inString){$/;"	f	class:KIM_IOline
get_data	KIMservice.cpp	/^void * KIM_API_model::get_data(char *nm){$/;"	f	class:KIM_API_model
get_index	KIMservice.cpp	/^int KIM_API_model::get_index(char *nm){$/;"	f	class:KIM_API_model
get_indexOfsupportedUnits	KIMservice.cpp	/^int KIM_API_model::get_indexOfsupportedUnits(char * unitS){$/;"	f	class:KIM_API_model
get_originalUnits	KIMservice.cpp	/^void KIM_API_model::get_originalUnits(char * unitS){$/;"	f	class:KIM_API_model
get_rank	KIMservice.cpp	/^int KIM_IOline::get_rank(){$/;"	f	class:KIM_IOline
get_rank_shape	KIMservice.cpp	/^intptr_t KIM_API_model::get_rank_shape(char *nm,int * shape){$/;"	f	class:KIM_API_model
get_shape	KIMservice.cpp	/^int *  KIM_IOline::get_shape(){$/;"	f	class:KIM_IOline
get_size	KIMservice.cpp	/^intptr_t KIM_API_model::get_size(char *nm){$/;"	f	class:KIM_API_model
get_units	KIMservice.cpp	/^void KIM_API_model::get_units(char * units){$/;"	f	class:KIM_API_model
get_unitscale	KIMservice.cpp	/^double KIM_IOline:: get_unitscale(){$/;"	f	class:KIM_IOline
getelemsize	KIMservice.cpp	/^int KIMBaseElement::getelemsize(char *tp){$/;"	f	class:KIMBaseElement
init	KIMservice.cpp	/^bool KIM_API_model::init(char * testinputfile,char* testname, char * modelinputfile,char *modelname){$/;"	f	class:KIM_API_model
init	KIMservice.cpp	/^bool KIM_API_model::init(char* testname, char* modelname){$/;"	f	class:KIM_API_model
init	KIMservice.cpp	/^void KIMBaseElement:: init(char *nm,char * tp,intptr_t sz, intptr_t rnk, int *shp,void * pdata){$/;"	f	class:KIMBaseElement
init	KIMservice.cpp	/^void KIMBaseElement::init(char *nm,char * tp,intptr_t sz, intptr_t rnk, int *shp){$/;"	f	class:KIMBaseElement
init	KIMservice.cpp	/^void KIMBaseElementUnit::init(){$/;"	f	class:KIMBaseElementUnit
init	KIMservice.cpp	/^void SystemOfUnit::init(char *infile){$/;"	f	class:SystemOfUnit
init2empty	KIMservice.cpp	/^void KIM_IOline:: init2empty(){$/;"	f	class:KIM_IOline
irrelevantVars2uncompute	KIMservice.cpp	/^void KIM_API_model::irrelevantVars2uncompute(KIM_API_model & test, KIM_API_model & mdl){$/;"	f	class:KIM_API_model
is_it_match	KIMservice.cpp	/^bool KIM_API_model::is_it_match(KIM_API_model & mdtst,KIM_IOline * IOlines,int nlns){$/;"	f	class:KIM_API_model
is_it_match	KIMservice.cpp	/^bool KIM_API_model::is_it_match(KIM_API_model & mdtst,char * inputinitfile){$/;"	f	class:KIM_API_model
is_it_match	KIMservice.cpp	/^bool KIM_API_model::is_it_match(KIM_API_model &test,KIM_API_model & mdl){$/;"	f	class:KIM_API_model
is_unitsfixed	KIMservice.cpp	/^bool KIM_API_model::  is_unitsfixed(){$/;"	f	class:KIM_API_model
isit_compute	KIMservice.cpp	/^bool KIM_API_model::isit_compute(char *nm){$/;"	f	class:KIM_API_model
isitinput	KIMservice.cpp	/^bool KIM_IOline:: isitinput(char*str){$/;"	f	class:KIM_IOline
isitoptional	KIMservice.cpp	/^bool KIM_IOline::isitoptional(){$/;"	f	class:KIM_IOline
isitoutput	KIMservice.cpp	/^bool KIM_IOline:: isitoutput(char*str){$/;"	f	class:KIM_IOline
isitperatom	KIMservice.cpp	/^bool KIM_IOline:: isitperatom(){$/;"	f	class:KIM_IOline
isitpernatomtypes	KIMservice.cpp	/^ bool KIM_IOline::isitpernatomtypes(){$/;"	f	class:KIM_IOline
isitsizedefined	KIMservice.cpp	/^bool KIM_IOline::isitsizedefined(){$/;"	f	class:KIM_IOline
isitunit	KIMservice.cpp	/^bool SystemOfUnit::isitunit(char * unit){$/;"	f	class:SystemOfUnit
kim_api_allocate_	KIMserviceC.cpp	/^void kim_api_allocate_(void *kimmdl, intptr_t *natoms, int *ntypes){$/;"	f
kim_api_free_	KIMserviceC.cpp	/^void kim_api_free_(void *kimmdl){$/;"	f
kim_api_get_data_	KIMserviceC.cpp	/^void * kim_api_get_data_(void *kimmdl,char **nm){$/;"	f
kim_api_get_data_byi_	KIMserviceC.cpp	/^void * kim_api_get_data_byi_(void *kimmdl,int * I){$/;"	f
kim_api_get_data_cptr_	KIMserviceC.cpp	/^void * kim_api_get_data_cptr_(void *kimmdl,char **nm){$/;"	f
kim_api_get_index_	KIMserviceC.cpp	/^int kim_api_get_index_(void *kimmdl,char **nm){$/;"	f
kim_api_get_originalunits_	KIMserviceC.cpp	/^void kim_api_get_originalunits_(void *kimmdl,char ** UnitsSystem){$/;"	f
kim_api_get_rank_shape_	KIMserviceC.cpp	/^intptr_t kim_api_get_rank_shape_(void *kimmdl,char **nm, int ** shape){$/;"	f
kim_api_get_rank_shape_byi_	KIMserviceC.cpp	/^intptr_t kim_api_get_rank_shape_byi_(void *kimmdl,int * I, int ** shape){$/;"	f
kim_api_get_size_	KIMserviceC.cpp	/^intptr_t kim_api_get_size_(void *kimmdl,char **nm){$/;"	f
kim_api_get_size_byi_	KIMserviceC.cpp	/^intptr_t kim_api_get_size_byi_(void *kimmdl,int * I){$/;"	f
kim_api_get_units_	KIMserviceC.cpp	/^void kim_api_get_units_(void *kimmdl,char ** UnitsSystem){$/;"	f
kim_api_init1_	KIMserviceC.cpp	/^int kim_api_init1_(void * kimmdl, char ** testinputf,char ** testname, char ** mdlinputf,char **mdlname){$/;"	f
kim_api_init_	KIMserviceC.cpp	/^int kim_api_init_(void * kimmdl,char ** testname, char **mdlname){$/;"	f
kim_api_isit_compute_	KIMserviceC.cpp	/^int kim_api_isit_compute_(void *kimmdl,char **nm){$/;"	f
kim_api_isit_compute_byi_	KIMserviceC.cpp	/^int kim_api_isit_compute_byi_(void *kimmdl,int * I){$/;"	f
kim_api_isunits_fixed_	KIMserviceC.cpp	/^int kim_api_isunits_fixed_(void *kimmdl){$/;"	f
kim_api_model_compute_	KIMserviceC.cpp	/^void kim_api_model_compute_(void*kimmdl){$/;"	f
kim_api_print_	KIMserviceC.cpp	/^void kim_api_print_(void *kimmdl){$/;"	f
kim_api_set2_compute_	KIMserviceC.cpp	/^void kim_api_set2_compute_(void *kimmdl,char **nm){$/;"	f
kim_api_set2_compute_byi_	KIMserviceC.cpp	/^void kim_api_set2_compute_byi_(void *kimmdl,int * I){$/;"	f
kim_api_set2_uncompute_	KIMserviceC.cpp	/^void kim_api_set2_uncompute_(void *kimmdl,char **nm){$/;"	f
kim_api_set2_uncompute_byi_	KIMserviceC.cpp	/^void kim_api_set2_uncompute_byi_(void *kimmdl,int * I){$/;"	f
kim_api_set_data_	KIMserviceC.cpp	/^int  kim_api_set_data_(void *kimmdl,char **nm,  intptr_t *size, void *dt){$/;"	f
kim_api_set_data_byi_	KIMserviceC.cpp	/^void kim_api_set_data_byi_(void *kimmdl,int * I, intptr_t * size, void *dt){$/;"	f
kim_api_set_units_	KIMserviceC.cpp	/^int kim_api_set_units_(void *kimmdl,char ** UnitsSystem){$/;"	f
kim_api_transform_units_to_	KIMserviceC.cpp	/^void kim_api_transform_units_to_(void *kimmdl,char ** UnitsSystem){$/;"	f
model_compute	KIMservice.cpp	/^void KIM_API_model::model_compute(){$/;"	f	class:KIM_API_model
nullefy	KIMservice.cpp	/^void KIMBaseElement::nullefy(){$/;"	f	class:KIMBaseElement
operator <<	KIMservice.cpp	/^ostream &operator<<(ostream &stream, IOline a){$/;"	f
operator <<	KIMservice.cpp	/^ostream &operator<<(ostream &stream, KIMBaseElement a){$/;"	f
operator <<	KIMservice.cpp	/^ostream &operator<<(ostream &stream, KIM_API_model a){$/;"	f
operator <<	KIMservice.cpp	/^ostream &operator<<(ostream &stream, KIM_IOline a){$/;"	f
operator ==	KIMservice.cpp	/^bool KIMBaseElement::operator==(KIM_IOline& kimioline){$/;"	f	class:KIMBaseElement
operator >>	KIMservice.cpp	/^istream &operator>>(istream &stream, IOline &a){$/;"	f
operator >>	KIMservice.cpp	/^istream &operator>>(istream &stream, KIM_IOline &a){$/;"	f
operator []	KIMservice.cpp	/^KIMBaseElement & KIM_API_model::operator[](char *nm){$/;"	f	class:KIM_API_model
operator []	KIMservice.cpp	/^KIMBaseElement & KIM_API_model::operator[](int i){$/;"	f	class:KIM_API_model
operator []	KIMservice.cpp	/^float& SystemOfUnit::operator[](char * unit){$/;"	f	class:SystemOfUnit
preinit	KIMservice.cpp	/^bool KIM_API_model:: preinit(char * initfile,char *modelname){$/;"	f	class:KIM_API_model
read_file	KIMservice.cpp	/^void KIM_API_model::read_file(char * initfile,KIM_IOline ** lns, int * numlns){$/;"	f	class:KIM_API_model
readlines	KIMservice.cpp	/^int SystemOfUnit:: readlines(char * infile, IOline **inlines){$/;"	f	class:SystemOfUnit
set2_compute	KIMservice.cpp	/^void KIM_API_model::set2_compute(char *nm){$/;"	f	class:KIM_API_model
set2_uncompute	KIMservice.cpp	/^void KIM_API_model::set2_uncompute(char *nm){$/;"	f	class:KIM_API_model
setScale	KIMservice.cpp	/^void KIM_API_model::setScale(int index){$/;"	f	class:KIM_API_model
set_data	KIMservice.cpp	/^bool KIM_API_model::set_data(char *nm, intptr_t size, void *dt){$/;"	f	class:KIM_API_model
set_data_byi	KIMservice.cpp	/^bool KIM_API_model::set_data_byi(int ind, intptr_t size, void* dt){$/;"	f	class:KIM_API_model
set_units	KIMservice.cpp	/^bool KIM_API_model::set_units(char * unitS){$/;"	f	class:KIM_API_model
set_unitsfixed	KIMservice.cpp	/^void KIM_API_model::set_unitsfixed(bool f){$/;"	f	class:KIM_API_model
strip	KIMservice.cpp	/^void IOline:: strip(){$/;"	f	class:IOline
strip	KIMservice.cpp	/^void IOline::strip(char *nm){$/;"	f	class:IOline
strip	KIMservice.cpp	/^void KIM_IOline:: strip(char * strv){$/;"	f	class:KIM_IOline
strip	KIMservice.cpp	/^void KIM_IOline::strip(){$/;"	f	class:KIM_IOline
supported_units_init	KIMservice.cpp	/^void KIM_API_model::supported_units_init(){$/;"	f	class:KIM_API_model
transform_units_to	KIMservice.cpp	/^void KIM_API_model::transform_units_to(char * unitS){$/;"	f	class:KIM_API_model
~KIMBaseElement	KIMservice.cpp	/^KIMBaseElement::~KIMBaseElement(){$/;"	f	class:KIMBaseElement
~KIM_API_model	KIMservice.cpp	/^KIM_API_model:: ~KIM_API_model(){$/;"	f	class:KIM_API_model
~SystemOfUnit	KIMservice.cpp	/^ SystemOfUnit:: ~SystemOfUnit(){$/;"	f	class:SystemOfUnit
