#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the Common Development
# and Distribution License Version 1.0 (the "License").
#
# You can obtain a copy of the license at
# http://www.opensource.org/licenses/CDDL-1.0.  See the License for the
# specific language governing permissions and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each file and
# include the License file in a prominent location with the name LICENSE.CDDL.
# If applicable, add the following below this CDDL HEADER, with the fields
# enclosed by brackets "[]" replaced with your own identifying information:
#
# Portions Copyright (c) [yyyy] [name of copyright owner]. All rights reserved.
#
# CDDL HEADER END
#

#
# Copyright (c) 2013, Regents of the University of Minnesota.
# All rights reserved.
#
# Contributors:
#    Ryan S. Elliott
#

#
# Release: This file is part of the openkim-api.git repository.
#


# sanity checks
ifndef KIM_DIR
   $(error Make variable KIM_DIR must be defined)
endif
include $(KIM_DIR)/MAKE_SYSTEM/Makefile.SanityCheck


#build target .a or .so for models
MODEL_BUILD_TARGET := $(strip $(MODEL_NAME)).a
ifneq ($(KIM_LINK),static-link)
   MODEL_BUILD_TARGET += $(patsubst %.a,%.so, $(MODEL_BUILD_TARGET))
else
   ifneq ("1","$(MAKELEVEL)")
     MODEL_BUILD_TARGET += STATIC_COMP_WARNING
   endif
endif

.PHONY: STATIC_COMP_WARNING
STATIC_COMP_WARNING:
	@echo ''; \
        echo '*************************************************************************'; \
        echo '*******               Compiling in static link mode               *******'; \
        echo '*******         You probably want to execute make from the        *******'; \
        echo '*******                     $$KIM_DIR directory                    *******'; \
        echo '*************************************************************************'; \

MODEL_NAME_KIM_STR_H = char* $(strip $(MODEL_NAME))_kim_str();
MODEL_NAME_KIM_STR_CPP = char* $(strip $(MODEL_NAME))_kim_str(){

all: $(MODEL_BUILD_TARGET)

ifneq ("C", "$(MODEL_INIT_FUNCTION_LANG)")
   MODEL_INIT_FUNC_NAME = `echo $(MODEL_INIT_FUNCTION_NAME) | tr 'A-Z' 'a-z'`_
else
   MODEL_INIT_FUNC_NAME = $(MODEL_INIT_FUNCTION_NAME)
endif
%_init_wrapper.cpp: Makefile
	@printf "Creating... intermediate file... $@.\n"
	@printf "extern \"C\"\n"                                            > $@
	@printf "{\n"                                                      >> $@
	@printf "   int $(strip $(MODEL_INIT_FUNC_NAME))(void *kimmdl);\n" >> $@
	@printf "   int $(strip $(MODEL_NAME))_init(void *kimmdl);\n"      >> $@
	@printf "}\n"                                                      >> $@
	@printf "\n"                                                       >> $@
	@printf "int $(strip $(MODEL_NAME))_init(void *kimmdl)\n"          >> $@
	@printf "{\n"                                                      >> $@
	@printf "   return $(MODEL_INIT_FUNC_NAME)(kimmdl);\n"             >> $@
	@printf "}\n"                                                      >> $@

$(strip $(MODEL_NAME)).a: $(LOCALOBJ) $(strip $(MODEL_NAME))_init_wrapper.o $(strip $(MODEL_NAME))_kim_str.o
	@printf "Creating... $@.\n"
	@ar rcs $@ $(LOCALOBJ) $(strip $(MODEL_NAME))_init_wrapper.o $(strip $(MODEL_NAME))_kim_str.o

export-list.txt: $(KIM_MAKE_FILES) Makefile
	@printf "Creating... $@.\n"
ifeq (darwin, $(KIM_SYSTEMLINKER))
	@printf "_$(MODEL_NAME)_init\n"     > $@
	@printf "_$(MODEL_NAME)_kim_str\n" >> $@
else # everything else (linux and freebsd)
	@printf "{\n"                                  > $@
	@printf "   global:\n"                        >> $@
	@printf "           $(MODEL_NAME)_init;\n"    >> $@
	@printf "           $(MODEL_NAME)_kim_str;\n" >> $@
	@printf "\n"                                  >> $@
	@printf "   local: *;\n"                      >> $@
	@printf "};\n"                                >> $@
endif

$(LOCALOBJ): Makefile

Makefile: $(KIM_MAKE_FILES) $(KIM_DIR)/MAKE_SYSTEM/Makefile.Model
	@touch Makefile

clean:
	@printf "Cleaning... Model.......... $(MODEL_NAME).\n"
	@rm -f $(LOCALOBJ) *.mod $(addprefix $(strip $(MODEL_NAME)).,a so) \
              export-list.txt \
              $(addprefix $(strip $(MODEL_NAME))_kim_str.,o cpp) \
              $(addprefix $(strip $(MODEL_NAME))_init_wrapper.,o cpp) $(LOCALCLEAN)
