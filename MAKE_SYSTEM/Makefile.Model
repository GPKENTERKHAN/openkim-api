#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the Common Development
# and Distribution License Version 1.0 (the "License").
#
# You can obtain a copy of the license at
# http://www.opensource.org/licenses/CDDL-1.0.  See the License for the
# specific language governing permissions and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each file and
# include the License file in a prominent location with the name LICENSE.CDDL.
# If applicable, add the following below this CDDL HEADER, with the fields
# enclosed by brackets "[]" replaced with your own identifying information:
#
# Portions Copyright (c) [yyyy] [name of copyright owner]. All rights reserved.
#
# CDDL HEADER END
#

#
# Copyright (c) 2013--2014, Regents of the University of Minnesota.
# All rights reserved.
#
# Contributors:
#    Ryan S. Elliott
#

#
# Release: This file is part of the openkim-api.git repository.
#


# sanity checks
ifndef KIM_DIR
   $(error Make variable KIM_DIR must be defined)
endif
include $(KIM_DIR)/MAKE_SYSTEM/Makefile.SanityCheck

# Clean up variables
MODEL_NAME := $(strip $(MODEL_NAME))
MODEL_INIT_FUNCTION_LANG := $(strip $(MODEL_INIT_FUNCTION_LANG))
MODEL_INIT_FUNCTION_NAME := $(strip $(MODEL_INIT_FUNCTION_NAME))

#build target .a or .so for models
MODEL_BUILD_TARGET := $(MODELLIBFILE).a
ifneq ($(KIM_LINK),static-link)
   MODEL_BUILD_TARGET += $(patsubst %.a,%.so, $(MODEL_BUILD_TARGET))
else
   ifneq ("1","$(MAKELEVEL)")
     MODEL_BUILD_TARGET += STATIC_COMP_WARNING
   endif
endif

.PHONY: STATIC_COMP_WARNING clean install uninstall
STATIC_COMP_WARNING:
	@printf '\n'; \
        printf '*******************************************************************************\n'; \
        printf '*******                  Compiling in static link mode                  *******\n'; \
        printf '*******            You probably want to execute make from the           *******\n'; \
        printf '*******                        $$KIM_DIR directory                       *******\n'; \
        printf '*******************************************************************************\n'; \

$(KDF_STR_NAME).cpp: $(MODEL_NAME).kim

all: $(MODEL_BUILD_TARGET)

# This feature should be removed once cray pointers go awasy
ifeq ("Fortran", "$(MODEL_INIT_FUNCTION_LANG)")
   MODEL_INIT_FUNC_NAME = `echo $(MODEL_INIT_FUNCTION_NAME) | tr 'A-Z' 'a-z'`_
else
   MODEL_INIT_FUNC_NAME = $(MODEL_INIT_FUNCTION_NAME)
endif

.INTERMEDIATE: init_wrapper.cpp
init_wrapper.cpp: Makefile
	@printf "Creating... intermediate file... $@.\n"
	$(QUELL)printf "extern \"C\"\n"                                    > $@
	$(QUELL)printf "{\n"                                              >> $@
	$(QUELL)printf "   int $(MODEL_INIT_FUNC_NAME)(void *kimmdl);\n"  >> $@
	$(QUELL)printf "   int (* $(MODEL_NAME)_init_pointer)(void*) =\n" >> $@
	$(QUELL)printf "      $(MODEL_INIT_FUNC_NAME);\n"                 >> $@
	$(QUELL)printf "}\n"                                              >> $@

$(MODELLIBFILE).a: $(LOCALOBJ) init_wrapper.o $(KDF_STR_NAME).o
	@printf "Creating... $@.\n"
	$(QUELL)ar rcs $@ $(LOCALOBJ) init_wrapper.o $(KDF_STR_NAME).o

$(EXPORT_LIST_NAME): $(KIM_MAKE_FILES) Makefile
	@printf "Creating... intermediate file... $@.\n"
ifeq (darwin, $(KIM_SYSTEMLINKER))
	$(QUELL)printf "_$(MODEL_NAME)_init_pointer\n"                       > $@
	$(QUELL)printf "_$(MODEL_NAME)_$(KDF_STR_NAME)\n"                   >> $@
	$(QUELL)printf "_$(MODEL_NAME)_$(KDF_STR_NAME)_chunks\n"            >> $@
else # everything else (linux and freebsd)
	$(QUELL)printf "{\n"                                                 > $@
	$(QUELL)printf "   global:\n"                                       >> $@
	$(QUELL)printf "           $(MODEL_NAME)_init_pointer;\n"           >> $@
	$(QUELL)printf "           $(MODEL_NAME)_$(KDF_STR_NAME);\n"        >> $@
	$(QUELL)printf "           $(MODEL_NAME)_$(KDF_STR_NAME)_chunks;\n" >> $@
	$(QUELL)printf "\n"                                                 >> $@
	$(QUELL)printf "   local: *;\n"                                     >> $@
	$(QUELL)printf "};\n"                                               >> $@
endif

$(LOCALOBJ): Makefile

Makefile: $(KIM_MAKE_FILES) $(KIM_DIR)/MAKE_SYSTEM/Makefile.Model
	$(QUELL)touch Makefile

clean:
	@printf "Cleaning... Model.......... $(MODEL_NAME).\n"
	$(QUELL)rm -f $(LOCALOBJ) *.mod $(addprefix $(MODELLIBFILE).,a so) .$(MODELLIBFILE).so\
                      $(KDF_STR_NAME).o \
                      init_wrapper.o $(LOCALCLEAN)

install: all
	@printf "Installing...($(DESTDIR)$(libdir)/$(package_name)/MODELS).......... Model.......... $(MODEL_NAME)"
ifneq (static-link,$(KIM_LINK))
	@printf ".\n"
	$(QUELL)mkdir -p $(DESTDIR)$(libdir)/$(package_name)/MODELS/$(MODEL_NAME)
	$(QUELL)cp $(if $(KIM_INSTALLED),,.)$(MODELLIBFILE).so $(DESTDIR)$(libdir)/$(package_name)/MODELS/$(MODEL_NAME)/$(MODELLIBFILE).so
	$(QUELL)chmod 644 $(DESTDIR)$(libdir)/$(package_name)/MODELS/$(MODEL_NAME)/$(MODELLIBFILE).so
else
	@printf ": nothing to be done for static-link.\n"
endif

uninstall:
	@printf "Uninstalling...($(DESTDIR)$(libdir)/$(package_name)/MODELS).......... Model.......... $(MODEL_NAME)"
ifneq (static-link,$(KIM_LINK))
	@printf ".\n"
	$(QUELL)rm -f "$(DESTDIR)$(libdir)/$(package_name)/MODELS/$(MODEL_NAME)/$(MODELLIBFILE).so"
	$(QUELL)if test \( -d "$(DESTDIR)$(libdir)/$(package_name)/MODELS/$(MODEL_NAME)" \); then rmdir "$(DESTDIR)$(libdir)/$(package_name)/MODELS/$(MODEL_NAME)" >& /dev/null; fi

else
	@printf ": nothing to be done for static-link.\n"
endif
