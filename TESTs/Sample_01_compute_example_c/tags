!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.6	//
cur_n	simple_neighbor.c	/^    int cur_n;$/;"	m	struct:data	file:
cutoff	simple_neighbor.c	/^    double cutoff;$/;"	m	struct:data	file:
data	simple_neighbor.c	/^struct data {$/;"	s	file:
get_neigh_iterator_	simple_neighbor.c	/^intptr_t * get_neigh_iterator_() {$/;"	f
i_cur	simple_neighbor.c	/^    int i_cur;$/;"	m	struct:data	file:
n	simple_neighbor.c	/^    int n;$/;"	m	struct:data	file:
n_cur	simple_neighbor.c	/^    int n_cur;$/;"	m	struct:data	file:
neighborscalculate_	simple_neighbor.c	/^void neighborscalculate_(intptr_t **ptr,double **x,int *n,double *cutofeps) {$/;"	f
neighborsiterator	simple_neighbor.c	/^void neighborsiterator(intptr_t **ptr,int **x,int *n,int *restart) {$/;"	f
neighborsiterator	simple_neighbor.c	/^void neighborsiterator(intptr_t **ptr,int **x_list,int *n_cur,int *restart) {$/;"	f
neighborsiterator	simple_neighbor.c	/^void neighborsiterator(intptr_t **ptr,int **x_list,int *n_items,int *restart) {$/;"	f
neighobj_allocate_	simple_neighbor.c	/^void neighobj_allocate_(intptr_t **ptr) {$/;"	f
neighobj_deallocate_	simple_neighbor.c	/^void neighobj_deallocate_(intptr_t **ptr) {$/;"	f
x	simple_neighbor.c	/^    double *x;$/;"	m	struct:data	file:
x	simple_neighbor.c	/^    int *x;$/;"	m	struct:data	file:
