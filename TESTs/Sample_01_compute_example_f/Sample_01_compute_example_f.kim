TEST_NAME := Sample_01_compute_example_f.incfg
SystemOfUnitsFix := fixed    #can work only with units system defined bellow
#SystemOfUnitsFix := flexible #can reset entire units system (default for model)

# This is is the input file that defines KIM API variables
# all field strting with # are comments and ignored
# it contains section MODEL_INPUT or MODEL_OUPUT
#followed by lines, that defines variable in the following format
#
# Name		   Type	     Dim	Units/Scale		Shape		requirements
#
# Name -- unique name of variables 
# Type -- real,real*8,integer,integer*8, pointer -- tells underlying structure of an element
# Unit  -- physical unit dimension of variable -- none, length,time, mass, ...
# SistemUnits/Scale -- name of the system units (metal, KIMstandard,...) or numerical scale factor to the standard units
# Shape -- enclossed in square brackets size of each tensor dimensions for example
#          [4,3] -- will describe second rank tensor, number of elemnets 12, fastest changing index has size 3
#          [N,3,3,3] -- rank 4 index with unspecified size = N*3*3*3 and aslo slowest index has size N.
#          [NumberAtoms,3] -- rank 2 tensor,  size of the first index is defined by variable NumberAtoms
#          []  -- means scalar (or rank zero tensor)
# requirements -- it is empty field if variable is needed allaws or field set to
# optional -- meaning that you can switch off calculation of the variable

SUPPORTED_ATOM/PARTICLES_TYPES:
#Simbol/name  	Type    code         
#Na		spec	11
#Li		spec	3		
#K		spec	19



    
MODEL_INPUT:
# Name		   Type	     Unit	SystemU/Scale		Shape		requirements

numberOfAtoms  integer*8     none	none		        []                               #empty [] means rank is zero

#numberAtomTypes   integer    none	none		        []

#atomTypes	integer	     none       none                  [numberAtomTypes]         # one [dummy] --rank is one      

coordinates       real*8     length     standard               [numberOfAtoms,3]

compute           method     none	none			[]

destroy 	  method     none	none			[]   

neighIterator   method      none	none			[]

neighObject  	pointer	    none 	none			[]                           # neighbor list object that is used by iterator

get_half_neigh	method	     none	none			[]

get_full_neigh	method	     none	none			[]

cutoff		real*8	    length	standard		[]

MODEL_OUTPUT: 
# Name		   Type	      Unit	SystemU/Scale		Shape		requirements

energy 		  real*8      energy     standard			[]

#force		  real*8      force	 standard			[3]		  
      
forces            real*8      force      standard               [numberOfAtoms,3]     

AUXILARIES:


OneBasedLists	dummy    #presence of this line indicates that indexes for atoms are from 1 to numberOfAtoms

Neigh_BothAccess	dummy # need both: locator and iterator

NEIGH-PURE-H	dummy # scenario method to deal with neighbor list and boundary condition

