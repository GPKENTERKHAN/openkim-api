#
# Release: This file is part of the openkim-api.git repository.
#
# Copyright 2011 Ellad B. Tadmor, Ryan S. Elliott, and James P. Sethna
# All rights reserved.
#

This file contains a table of information about the example Models included with
this release of the openkim-api package.

***  List of the example Models  ***

Model name                         Language  NBC             Loca/Iter  Half/Full   Published 
                                                                                    parameters
----------------------------------------------------------------------------------------------

model_Al_PF_ErcolessiAdams         F90       NEIGH-RVEC-F    Iterator   Full        NO
                                             NEIGH-PURE-H    Locator    Half
                                             NEIGH-PURE-F
                                             MI-OPBC-H
                                             MI-OPBC-F
                                             CLUSTER

model_ArNe_P_MLJ_NEIGH_RVEC_F      F90       NEIGH-RVEC-F    Locator    Full        YES

model_Ar_P_LJ                      F90       NEIGH-RVEC-F    Iterator   Full        YES
 - based on model_driver_P_LJ                NEIGH-PURE-H    Locator    Half
                                             NEIGH-PURE-F
                                             MI-OPBC-H
                                             MI-OPBC-F
                                             CLUSTER

model_Ar_P_MLJ_C                   C         NEIGH-RVEC-F    Iterator   Full        NO
                                             NEIGH-PURE-H    Locator    Half
                                             NEIGH-PURE-F
                                             MI-OPBC-H
                                             MI-OPBC-F
                                             CLUSTER

model_Ar_P_MLJ_CLUSTER_C           C         CLUSTER         N/A        N/A         YES

model_Ar_P_MLJ_CLUSTER_F90         F90       CLUSTER         N/A        N/A         YES

model_Ar_P_MLJ_F90                 F90       NEIGH-RVEC-F    Iterator   Full        NO
                                             NEIGH-PURE-H    Locator    Half
                                             NEIGH-PURE-F
                                             MI-OPBC-H
                                             MI-OPBC-F
                                             CLUSTER

model_Ar_P_MLJ_MI_OPBC_H_F         F90       MI-OPBC-H       Locator    Half        YES
                                             MI-OPBC-F                  Full

model_Ar_P_MLJ_NEIGH_PURE_H_F      F90       NEIGH-PURE-H    Locator    Half        YES
                                             NEIGH-PURE-F               Full

model_Ar_P_MLJ_NEIGH_RVEC_F        F90       NEIGH_RVEC-F    Locator    Full        YES

model_Ar_P_Morse                   C         NEIGH-RVEC-F    Iterator   Full        YES
 - based on model_driver_P_Morse             NEIGH-PURE-H    Locator    Half
                                             NEIGH-PURE-F
                                             MI-OPBC-H
                                             MI-OPBC-F
                                             CLUSTER

model_Ne_P_LJ                      F90       NEIGH-RVEC-F    Iterator   Full        YES
 - based on model_driver_P_LJ                NEIGH-PURE-H    Locator    Half
                                             NEIGH-PURE-F
                                             MI-OPBC-H
                                             MI-OPBC-F
                                             CLUSTER

model_Ne_P_LJ_NEIGH_PURE_H         F77       NEIGH-PURE-H    Iterator   Half        NO

model_Ne_P_MLJ_NEIGH_RVEC_F        C         NEIGH-RVEC-F    Iterator   Full        YES

model_Ne_P_Morse                   C         NEIGH-RVEC-F    Iterator   Full        YES
 - based on model_driver_P_Morse             NEIGH-PURE-H    Locator    Half
                                             NEIGH-PURE-F
                                             MI-OPBC-H
                                             MI-OPBC-F
                                             CLUSTER
---------------------------------------------------------------------------------------------

***  Description of the example Models  ***

A description of the provided example Models is given below.  The Models are,
roughly, listed in order of increasing complexity.  It is suggested that
examining the example Models in this order will provide a gradual introduction
to the various components of a KIM-compliant Model. (See the README file in the 
DOCs directory for guidelines on how to study the Models distributed with this 
package.)

model_Ar_P_MLJ_CLUSTER_C   (C)
model_Ar_P_MLJ_CLUSTER_F90 (Fortran 90)
     These Models implement the CLUSTER neighbor list and boundary condition
     (NBC) method, which is the simplest computation to understand.  For this
     reason, looking at the compute() or Compute_Energy_Forces() subroutines,
     respectively, for this Model is a good place to get started when first
     trying to understand how a KIM compliant Model works.  Note that these 
     Models publish their parameters. This means that they must also provide
     reinitialization and destroy routines in addition to the required 
     initialization routine. Examples of Models that do not publish parameters
     (which makes the initialization routine simpler) are described below.

model_Ne_P_LJ_NEIGH_PURE_H (FORTRAN 77)
     This Model implements the NEIGH-PURE-H NBC method, which is slightly more
     complicated than the CLUSTER method.  The Model uses only Iterator mode
     for neighbor list access, which makes this Model a good place to study the
     details of the NEIGH-PURE-H method and Iterator mode.  This Model does not
     publish its parameters, which makes it easy to focus on the details of the
     calculate subroutine.

model_Ar_P_MLJ_NEIGH_PURE_H_F (Fortran 90)
     This Model implements both the NEIGH-PURE-H and NEIGH-PURE-F NBC methods,
     and supports both Iterator mode and Locator mode.  Thus, this Model makes
     it easy to identify the differences required for a computation when one
     uses half or full neighbor lists, as well as, Iterator or Locator neighbor
     list access modes.

model_Ar_P_MLJ_NEIGH_RVEC_F (Fortran 90)
model_Ne_P_MLJ_NEIGH_RVEC_F (C)
     These two Models (the first written in F90, the second written in C)
     provide parallel examples of an implementation of the NEIGH-RVEC-F NBC
     method.  This NBC method includes relative position vectors (Rij's) as
     well as the usual neighbor list of atom Id's.

model_Ar_P_MLJ_MI_OPBC_H_F (Fortran 90)
     This Model implements the MI-OPBC-H and MI-OPBC-F NBC methods.  This is,
     arguably, the most complex method and requires that both the Test and
     Model apply the "minimum image" convention (using the `boxlength'
     argument) to determine an atom's neighbors and the corresponding relative
     position vectors.

model_ArNe_P_MLJ_NEIGH_RVEC_F (Fortran 90)
     This Model is the same as model_Ar_P_MLJ_NEIGH_RVEC_F except that it
     supports interactions between argon and neon atoms.  Thus, it is useful to
     compare these two Models in order to see what changes are required for a
     KIM Model to support multiple species interactions.

model_Ar_P_MLJ_C (C)
     This Model is based on the template file
     $KIM_DIR/DOCs/TEMPLATEs/model_El_P_Template.c.  Thus, it is useful to
     compare the file model_Ar_P_MLJ_C.c with
     $KIM_DIR/DOCs/TEMPLATEs/model_El_P_Template.c to see the relatively few
     changes required to implement the modified Lennard-Jones model.  The
     template implements all NBCs and Iterator and Locator modes in a way that
     results in a very compact compute() function.

model_Ar_P_MLJ_F90 (Fortran 90)
     This Model is based on the template file
     $KIM_DIR/DOCs/TEMPLATEs/model_El_P_Template.F90.  Thus, it is useful to
     compare the file model_Ar_P_MLJ_F90.F90 with
     $KIM_DIR/DOCs/TEMPLATEs/model_El_P_Template.F90 to see the relatively few
     changes required to implement the modified Lennard-Jones model.  The
     template implements all NBCs and Iterator and Locator modes in a way that
     results in a very compact Compute_Energy_Forces() subroutine.

model_Al_PF_ErcolessiAdams (Fortran 90)
     This Model is based on the template file
     $KIM_DIR/DOCs/TEMPLATEs/model_El_PF_Template.F90.  Thus, it is useful to
     compare the file model_Al_PF_ErcolessiAdams.F90 with
     $KIM_DIRDOCs/TEMPLATEs/model_El_PF_Template.F90 to see the relatively
     simple changes required to implement a pair functional Model.

model_Ar_P_LJ (F90)
model_Ne_P_LJ (F90)
     These Models are based on the KIM Model Driver model_driver_P_LJ.  They
     only consist of a simple Makefile and a parameters file.  Everything else
     is handled by the KIM Model Driver.  See the directory
     $KIM_DIR/MODEL_DRIVERs/model_driver_P_LJ/ for more details on how KIM
     Model Drivers are handled.

model_Ar_P_Morse (C)
model_Ne_P_Morse (C)
     These Models are based on the KIM Model Driver model_driver_P_Morse.  They
     only consist of a simple Makefile and a parameters file.  Everything else
     is handled by the KIM Model Driver.  See the directory
     $KIM_DIR/MODEL_DRIVERs/model_driver_P_Morse/ for more details on how KIM
     Model Drivers are handled.


