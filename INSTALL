The openkim-api package

-------------------------------------------------------------------------------

Instructions for installing, compiling and linking this openkim-api release:

1. In these instructions `/OPENKIM-API' represents the absolute path name for
   the directory in which this README file is contained.
 
2. Set up environment variable:

bash:
> export KIM_DIR = /OPENKIM-API/

(Make sure to include the trailing slash.)


3. By default, all makefiles use the GNU compilers for 64 bit linux. 
In order to use the Intel compiler, define the environment variable KIM_INTEL

bash: 
> export KIM_INTEL="yes". 

For using a 32 bit machine, define the environment variable KIM_SYSTEM32 

bash: 
> export KIM_SYSTEM32="yes" 


4. Change to the KIM_DIR directory (if needed) and execute the commands: 

> make

     This will build all models, tests, and the KIM api service routine library
     (`make clean' -- will remove all .o, .a, .so and executable files) 


5. To run a Test, change to the appropriate directory and run the executable.
For example,

> cd TESTs/Sample_01_compute_example_f

> echo "Sample_01_lj_cutoff_f" | ./Sample_01_compute_example_f

Each test sample (example Sample_01_compute_example_f and 
Sample_01_compute_example_c) reads the name of the model from its input stream, 
initiates the model and computes the total energy and forces using the coordinates 
of a configuration of atoms.


6. Each Test (and Model) has its own make file for compiling and linking. 
If changes are made to the code, perform step (4) again (from the top directory).


7. In case of using a non-standard location for any of the directores KIM_API,
TESTs, or MODELs one or more of the following environment variables must be set:
     KIM_API_DIR
     KIM_TEST_DIR
     KIM_MODELS_DIR

8. The openkim-api package provides the possibility of creating dynamic load
libraries through setting the KIM_DYNAMIC environment variable. If KIM_DYNAMIC
is set, the makefile will build .so libraries (in addition to the static .a
libraries) and KIM API will use those libraries to load models and call initialize
routines dynamically (during runtime)
 
> export KIM_DYNAMIC=yes

If KIM_DYNAMIC is not set, the models will build and linked statically.

9. For those users who do not have a Fortran compiler installed, the openkim-api
package provides the possibility to build all models and tests excluding those
written in FORTRAN (f77, f90, f) through setting KIM_NO_FORTRAN environment variable.

>  export KIM_NO_FORTRAN=yes

If it is set, all of the models and tests with names ending in _f77, _f, _f90
will be omitted from build process.

10. The openkim-api package provides the KIM_API_get_neigh_half() and
KIM_API_get_neigh_full() wrapper service routines for access to the neighbor
list object. These routines check to ensure that the maximum numbers of
neighbors for an atom does not exceed KIM_API_MAX_NEIGHBORS. If this
environment variable KIM_API_MAX_NEIGHBORS is not set, the default value is
512.  To change the value of this parameter, for example, to 1024 (or any other
value) use the command

> export KIM_API_MAX_NEIGHBORS=1024




TROUBLESHOOTING: By default, the make system uses the g++ compiler with 
the -lgfortran option to link compiled FORTRAN executables. If (for some
versions of linux or GNU compilers) linking of FORTRAN executables with the
g++ compiler does not work, try gfortran with the -lstdc++ option.  See lines
64-65 in the Include.mk file (change them to lines 66-67). 

GNU compilers tested with version  4.2.x or higher, the Intel compiler must be
version 11.1 or higher.

